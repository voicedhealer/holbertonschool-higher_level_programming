# Importation de la classe BaseGeometry
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Test 1: integer_validator avec une valeur valide
>>> bg.integer_validator("width", 10)
>>> bg.integer_validator("height", 1)

# Test 2: integer_validator avec un non-entier (doit lever TypeError)
>>> try:
...     bg.integer_validator("age", 12.5)
... except TypeError as e:
...     print(e)
...
age must be an integer

# Test 3: integer_validator avec une chaîne (doit lever TypeError)
>>> try:
...     bg.integer_validator("name_str", "hello")
... except TypeError as e:
...     print(e)
...
name_str must be an integer

# Test 4: integer_validator avec une valeur nulle (doit lever ValueError)
>>> try:
...     bg.integer_validator("number", 0)
... except ValueError as e:
...     print(e)
...
number must be greater than 0

# Test 5: integer_validator avec une valeur négative (doit lever ValueError)
>>> try:
...     bg.integer_validator("count", -5)
... except ValueError as e:
...     print(e)
...
count must be greater than 0

# Test 6: Utilisation de noms différents pour le paramètre 'name'
>>> bg.integer_validator("my_value", 100)

>>> try:
...     bg.integer_validator("another_value", -1)
... except ValueError as e:
...     print(e)
...
another_value must be greater than 0

# Test 7: Vérification de la méthode area() (si tu veux la garder dans ce fichier de test)
>>> try:
...     bg.area()
... except Exception as e:
...     print(e)
...
area() is not implemented
