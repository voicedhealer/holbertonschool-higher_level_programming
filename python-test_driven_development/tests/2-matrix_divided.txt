>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# matrix is a string:
>>> matrix = "matrix"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is an int:
>>> matrix = 2
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is list of ints:
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is list of floats:
>>> matrix = [1.2, 2.5, 3.6]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is list of ints and floats:
>>> matrix = [1, 2.5, 10]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is list of empty lists:
>>> matrix = [[], []]
>>> matrix_divided(matrix, 2)
[[], []]

# matrix is list of lists of ints and floats:
>>> matrix = [
... [1, 2.5, 3],
... [4.40, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.25, 1.5], [2.2, 2.5, 3.0]]

# matrix is list of lists of ints, floats, and strings:
>>> matrix = [
... [1, 2.5, 3],
... [4.40, 5, "string?"]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is list of int, floats, and list:
>>> matrix = [
... 1, 2.3,
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix of ints and floats, rows have different size:
>>> matrix = [
... [1, 2],
... [3, 4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# matrix of ints and string, rows have different size:
>>> matrix = [
... [1, "2"],
... [3, 4, "five", 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix of ints, div is int:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [1.5, 2.0, 2.5]]

# matrix of floats, div is int:
>>> matrix = [
... [1.3, 2.45, 3.76],
... [3.9, 4.0, 5.1]
... ]
>>> matrix_divided(matrix, 2)
[[0.65, 1.23, 1.88], [1.95, 2.0, 2.55]]

# matrix of ints, div is float:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.2, 1.6, 2.0]]

# matrix of ints, div is 0:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# matrix of ints, div is NaN:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

# matrix of ints, div is Inf:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# matrix of floats, div is Inf:
>>> matrix = [
... [1.1, 2.3, 3.5],
... [3.7, 4.9, 5.5]
... ]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# matrix of ints, div is string:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, "divisor")
Traceback (most recent call last):
...
TypeError: div must be a number

# matrix of ints, div is None:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
...
TypeError: div must be a number

# matrix of ints, div is not given:
>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# matrix_divided with no argument:
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# matrix_divided with None as argument:
>>> matrix_divided(None)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
